import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { Badge } from '@/components/ui/badge';
import { ScrollArea } from '@/components/ui/scroll-area';
import { FileText, Download, Copy, Loader2 } from 'lucide-react';
import { toast } from 'sonner';
import { useQuery } from '@tanstack/react-query';
import { supabase } from '@/integrations/supabase/client';

interface LegalDocumentGeneratorProps {
  companyId: string;
  country: 'kuwait' | 'saudi' | 'qatar';
  onDocumentGenerated?: (document: any) => void;
}

export const LegalDocumentGenerator: React.FC<LegalDocumentGeneratorProps> = ({
  companyId,
  country,
  onDocumentGenerated
}) => {
  const [selectedCustomer, setSelectedCustomer] = useState('');
  const [documentType, setDocumentType] = useState<'legal_warning' | 'payment_claim' | 'contract_termination'>('legal_warning');
  const [generatedDocument, setGeneratedDocument] = useState('');
  const [isGenerating, setIsGenerating] = useState(false);

  // Fetch customers
  const { data: customers } = useQuery({
    queryKey: ['customers', companyId],
    queryFn: async () => {
      const { data, error } = await supabase
        .from('customers')
        .select('id, first_name, last_name, company_name, customer_type')
        .eq('company_id', companyId)
        .eq('is_active', true)
        .order('created_at', { ascending: false });

      if (error) throw error;
      return data;
    },
    enabled: !!companyId
  });

  const handleGenerateDocument = async () => {
    if (!selectedCustomer) {
      toast.error('ูุฑุฌู ุงุฎุชูุงุฑ ุนููู');
      return;
    }

    setIsGenerating(true);

    try {
      // Fetch customer details
      const { data: customer, error } = await supabase
        .from('customers')
        .select('*, contracts(*), payments(*)')
        .eq('id', selectedCustomer)
        .single();

      if (error) throw error;

      // Generate document based on type
      const document = generateDocumentContent(customer, documentType, country);
      setGeneratedDocument(document);

      // Save to database
      await supabase.from('legal_documents').insert({
        company_id: companyId,
        customer_id: selectedCustomer,
        document_type: documentType,
        content: document,
        country_law: country
      });

      toast.success('ุชู ุฅูุดุงุก ุงููุซููุฉ ุจูุฌุงุญ');
      
      if (onDocumentGenerated) {
        onDocumentGenerated({ content: document, type: documentType });
      }
    } catch (error) {
      console.error('Error generating document:', error);
      toast.error('ุญุฏุซ ุฎุทุฃ ูู ุฅูุดุงุก ุงููุซููุฉ');
    } finally {
      setIsGenerating(false);
    }
  };

  const handleCopyDocument = () => {
    navigator.clipboard.writeText(generatedDocument);
    toast.success('ุชู ูุณุฎ ุงููุซููุฉ');
  };

  const handleDownloadDocument = () => {
    const blob = new Blob([generatedDocument], { type: 'text/plain;charset=utf-8' });
    const url = URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = url;
    link.download = `${documentType}_${new Date().toISOString().split('T')[0]}.txt`;
    link.click();
    URL.revokeObjectURL(url);
    toast.success('ุชู ุชุญููู ุงููุซููุฉ');
  };

  return (
    <div className="grid gap-6 md:grid-cols-2">
      {/* Document Settings */}
      <Card>
        <CardHeader>
          <CardTitle>ุฅุนุฏุงุฏุงุช ุงููุซููุฉ</CardTitle>
          <CardDescription>ุงุฎุชุฑ ููุน ุงููุซููุฉ ูุงูุนููู</CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          {/* Document Type */}
          <div className="space-y-2">
            <Label>ููุน ุงููุซููุฉ</Label>
            <Select value={documentType} onValueChange={(value: any) => setDocumentType(value)}>
              <SelectTrigger>
                <SelectValue />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="legal_warning">ุฅูุฐุงุฑ ูุงูููู</SelectItem>
                <SelectItem value="payment_claim">ูุทุงูุจุฉ ูุงููุฉ</SelectItem>
                <SelectItem value="contract_termination">ุฅููุงุก ุนูุฏ</SelectItem>
              </SelectContent>
            </Select>
          </div>

          {/* Customer Selection */}
          <div className="space-y-2">
            <Label>ุงุฎุชุฑ ุงูุนููู</Label>
            <Select value={selectedCustomer} onValueChange={setSelectedCustomer}>
              <SelectTrigger>
                <SelectValue placeholder="ุงุฎุชุฑ ุนููู..." />
              </SelectTrigger>
              <SelectContent>
                {customers?.map((customer) => (
                  <SelectItem key={customer.id} value={customer.id}>
                    {customer.customer_type === 'company' 
                      ? customer.company_name 
                      : `${customer.first_name} ${customer.last_name}`}
                  </SelectItem>
                ))}
              </SelectContent>
            </Select>
          </div>

          {/* Country Badge */}
          <div className="flex items-center gap-2">
            <Label>ุงููุงููู ุงููุทุจู:</Label>
            <Badge>
              {country === 'kuwait' ? '๐ฐ๐ผ ุงููููุช' : 
               country === 'saudi' ? '๐ธ๐ฆ ุงูุณุนูุฏูุฉ' : 
               '๐ถ๐ฆ ูุทุฑ'}
            </Badge>
          </div>

          {/* Generate Button */}
          <Button
            onClick={handleGenerateDocument}
            disabled={!selectedCustomer || isGenerating}
            className="w-full"
          >
            {isGenerating ? (
              <>
                <Loader2 className="ml-2 h-4 w-4 animate-spin" />
                ุฌุงุฑู ุงูุฅูุดุงุก...
              </>
            ) : (
              <>
                <FileText className="ml-2 h-4 w-4" />
                ุฅูุดุงุก ุงููุซููุฉ
              </>
            )}
          </Button>
        </CardContent>
      </Card>

      {/* Document Preview */}
      <Card>
        <CardHeader>
          <CardTitle>ูุนุงููุฉ ุงููุซููุฉ</CardTitle>
          <CardDescription>
            {generatedDocument ? 'ุงููุซููุฉ ุงููููุดุฃุฉ' : 'ุณุชุธูุฑ ุงููุซููุฉ ููุง ุจุนุฏ ุงูุฅูุดุงุก'}
          </CardDescription>
        </CardHeader>
        <CardContent>
          {generatedDocument ? (
            <div className="space-y-4">
              <ScrollArea className="h-[400px] rounded-md border p-4">
                <pre className="text-sm whitespace-pre-wrap font-arabic">
                  {generatedDocument}
                </pre>
              </ScrollArea>

              {/* Actions */}
              <div className="flex gap-2">
                <Button
                  variant="outline"
                  onClick={handleCopyDocument}
                  className="flex-1"
                >
                  <Copy className="ml-2 h-4 w-4" />
                  ูุณุฎ
                </Button>
                <Button
                  variant="outline"
                  onClick={handleDownloadDocument}
                  className="flex-1"
                >
                  <Download className="ml-2 h-4 w-4" />
                  ุชุญููู
                </Button>
              </div>
            </div>
          ) : (
            <div className="flex flex-col items-center justify-center h-[400px] text-muted-foreground">
              <FileText className="h-12 w-12 mb-4" />
              <p>ูู ูุชู ุฅูุดุงุก ูุซููุฉ ุจุนุฏ</p>
            </div>
          )}
        </CardContent>
      </Card>
    </div>
  );
};

function generateDocumentContent(customer: any, type: string, country: string): string {
  const customerName = customer.customer_type === 'company' 
    ? customer.company_name 
    : `${customer.first_name} ${customer.last_name}`;

  const today = new Date().toLocaleDateString('ar-EG');
  
  const unpaidAmount = customer.payments
    ?.filter((p: any) => p.status === 'pending')
    .reduce((sum: number, p: any) => sum + p.amount, 0) || 0;

  const templates = {
    legal_warning_kuwait: `
ุจุณู ุงููู ุงูุฑุญูู ุงูุฑุญูู

ุฅูุฐุงุฑ ูุงูููู

ุจููุฌุจ ูุงููู ุงูุชุฌุงุฑุฉ ุงููููุชู ุฑูู 68 ูุณูุฉ 1980

ุฅูู: ${customerName}

ูุญูุทูู ุนููุงู ุจููุฌุจ ูุฐุง ุงูุฅูุฐุงุฑ ุฃู ูุฏููู ูุณุชุญูุงุช ูุงููุฉ ูุชุฃุฎุฑุฉ ุจูููุฉ ${unpaidAmount.toFixed(3)} ุฏููุงุฑ ูููุชู.

ูุจูุงุกู ุนูู ุงูุนููุฏ ุงููุจุฑูุฉ ุจูููุง ูุงูุชู ูู ูุชู ุงูููุงุก ุจุงูุชุฒุงูุงุชูุงุ ูุทุงูุจูู ุจุณุฏุงุฏ ูุงูู ุงููุจูุบ ุงููุฐููุฑ ุฃุนูุงู ุฎูุงู ูุฏุฉ ุฃูุตุงูุง ุณุจุนุฉ (7) ุฃูุงู ูู ุชุงุฑูุฎ ุงุณุชูุงู ูุฐุง ุงูุฅูุฐุงุฑ.

ููู ุญุงูุฉ ุนุฏู ุงูุณุฏุงุฏ ุฎูุงู ุงููุฏุฉ ุงููุญุฏุฏุฉุ ุณูุถุทุฑ ูุงุชุฎุงุฐ ุงูุฅุฌุฑุงุกุงุช ุงููุงููููุฉ ุงููุงุฒูุฉ ูููุทุงูุจุฉ ุจุญููููุง ุฏูู ุฃุฏูู ูุณุคูููุฉ ุนูููุง.

ูุน ุญูุธ ูุงูุฉ ุญููููุง ุงููุงููููุฉ.

ุงูุชุงุฑูุฎ: ${today}

---
ุชู ุงูุฅูุดุงุก ุจูุงุณุทุฉ ุงููุณุชุดุงุฑ ุงููุงูููู ุงูุฐูู
    `.trim(),

    legal_warning_saudi: `
ุจุณู ุงููู ุงูุฑุญูู ุงูุฑุญูู

ุฅูุฐุงุฑ ุฑุณูู

ูููุงู ููุธุงู ุงููุนุงููุงุช ุงููุฏููุฉ ุงูุณุนูุฏู

ุฅูู ุงูุณูุฏ/ุฉ: ${customerName}

ูููุฏูู ุจุฃู ูุฏููู ูุณุชุญูุงุช ูุงููุฉ ูุชุฃุฎุฑุฉ ุจูุจูุบ ${unpaidAmount.toFixed(2)} ุฑูุงู ุณุนูุฏู.

ุจููุฌุจ ุงูุนููุฏ ุงููุจุฑูุฉ ูุนูุงุ ูุทุงูุจูู ุจุณุฏุงุฏ ุงููุจูุบ ูุงููุงู ุฎูุงู ุณุจุนุฉ (7) ุฃูุงู ูู ุชุงุฑูุฎ ุงุณุชูุงู ูุฐุง ุงูุฅูุฐุงุฑ.

ูู ุญุงูุฉ ุงูุชูุงุนุณ ุนู ุงูุณุฏุงุฏุ ุณููุฌุฃ ููุฌูุงุช ุงููุถุงุฆูุฉ ุงููุฎุชุตุฉ.

ูุงููู ุงูููููุ

ุงูุชุงุฑูุฎ: ${today}

---
ุชู ุงูุฅูุดุงุก ุจูุงุณุทุฉ ุงููุณุชุดุงุฑ ุงููุงูููู ุงูุฐูู
    `.trim(),

    payment_claim_kuwait: `
ุจุณู ุงููู ุงูุฑุญูู ุงูุฑุญูู

ูุทุงูุจุฉ ูุงููุฉ

ุฅูู: ${customerName}

ูุชูุฏู ุจููุฌุจ ูุฐู ุงููุทุงูุจุฉ ุงูุฑุณููุฉ ูููุทุงูุจุฉ ุจูุจูุบ ${unpaidAmount.toFixed(3)} ุฏููุงุฑ ูููุชู ุงููุณุชุญู ููุง.

ุชูุงุตูู ุงููุณุชุญูุงุช:
- ุงููุจูุบ ุงูุฃุตูู: ${unpaidAmount.toFixed(3)} ุฏ.ู
- ุชุงุฑูุฎ ุงูุงุณุชุญูุงู: [ุญุณุจ ุงูุนูุฏ]
- ุนุฏุฏ ุงูุฃูุงู ุงููุชุฃุฎุฑุฉ: [ูุชู ุงูุญุณุงุจ]

ูุทุงูุจูู ุจุณุฏุงุฏ ุงููุจูุบ ููุฑุงู ูุฅูุง ุณูุถุทุฑ ูุงุชุฎุงุฐ ุงูุฅุฌุฑุงุกุงุช ุงููุงููููุฉ.

ุงูุชุงุฑูุฎ: ${today}

---
ุชู ุงูุฅูุดุงุก ุจูุงุณุทุฉ ุงููุณุชุดุงุฑ ุงููุงูููู ุงูุฐูู
    `.trim()
  };

  const key = `${type}_${country}`;
  return templates[key as keyof typeof templates] || templates.legal_warning_kuwait;
}
