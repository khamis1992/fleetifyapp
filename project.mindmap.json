{
  "name": "FleetifyApp",
  "description": "Comprehensive Fleet & Property Management System",
  "version": "1.0.0",
  "architecture": {
    "frontend": {
      "framework": "React 18.3.1 + TypeScript 5.9.2",
      "build": "Vite 5.4.20",
      "ui": {
        "styling": ["TailwindCSS 3.4.15", "Radix UI", "Shadcn/ui"],
        "animations": "Framer Motion 12.23.12",
        "icons": "Lucide React"
      },
      "state": {
        "global": ["React Context (Auth, Company, FeatureFlags)"],
        "server": "Tanstack Query 5.87.4",
        "forms": "React Hook Form 7.61.1"
      },
      "routing": "React Router DOM 6.26.2",
      "mobile": "Capacitor 6.1.2"
    },
    "backend": {
      "platform": "Supabase",
      "database": "PostgreSQL",
      "auth": "Supabase Auth + RLS",
      "storage": "Supabase Storage",
      "realtime": "Supabase Realtime",
      "functions": [
        "financial-analysis-ai",
        "intelligent-contract-processor",
        "process-traffic-fine",
        "scan-invoice",
        "transfer-user-company"
      ]
    }
  },
  "modules": {
    "fleet": {
      "path": "/src/pages/fleet/",
      "features": [
        "Vehicle Management",
        "Maintenance Tracking",
        "Insurance Management",
        "Vehicle Transfers",
        "Fleet Analytics"
      ],
      "key_hooks": [
        "useVehicles",
        "useMaintenanceVehicles",
        "useVehicleGroups",
        "useFleetStatus"
      ]
    },
    "contracts": {
      "path": "/src/pages/Contracts.tsx",
      "features": [
        "Contract Creation",
        "Templates",
        "Document Generation",
        "Payment Schedules",
        "Renewal Management"
      ],
      "key_hooks": [
        "useContracts",
        "useContractCreation",
        "useContractTemplates",
        "useContractDocuments"
      ]
    },
    "customers": {
      "path": "/src/pages/Customers.tsx",
      "features": [
        "Customer Profiles",
        "Account Management",
        "Statement Generation",
        "Bulk Operations",
        "Duplicate Management"
      ],
      "key_hooks": [
        "useCustomers",
        "useEnhancedCustomers",
        "useCustomerAccounts",
        "useBulkDeleteCustomers"
      ]
    },
    "financial": {
      "path": "/src/pages/FinancialTracking.tsx",
      "features": [
        "Payment Processing",
        "Invoice Generation",
        "Financial Reports",
        "Account Reconciliation",
        "Budget Management"
      ],
      "key_hooks": [
        "useFinance",
        "usePayments",
        "useRentalPayments",
        "useGeneralLedger"
      ]
    },
    "legal": {
      "path": "/src/pages/legal/",
      "features": [
        "Case Management",
        "Document Management",
        "Traffic Violations",
        "Legal Correspondence",
        "AI Legal Assistant"
      ],
      "key_hooks": [
        "useLegalAI",
        "useLegalCases",
        "useTrafficViolations",
        "useLegalDocuments"
      ]
    },
    "hr": {
      "path": "/src/pages/hr/",
      "features": [
        "Employee Management",
        "Payroll Processing",
        "Attendance Tracking",
        "Leave Management",
        "HR Reports"
      ],
      "key_hooks": [
        "usePayroll",
        "useAttendance",
        "useLeaveManagement",
        "useHRReports"
      ]
    }
  },
  "data_flow": {
    "pattern": "Component → Hook → Query → Supabase → Database",
    "caching": "Tanstack Query with 5min stale time",
    "realtime": "WebSocket subscriptions via Supabase",
    "error_handling": "Try/Catch → Error Boundary → Toast → Logger"
  },
  "file_structure": {
    "src/components": "Reusable UI components",
    "src/contexts": "Global state providers",
    "src/hooks": "Business logic and data fetching",
    "src/pages": "Route components",
    "src/lib": "Utility libraries",
    "src/utils": "Helper functions",
    "src/types": "TypeScript definitions",
    "src/integrations": "Third-party integrations"
  },
  "key_dependencies": {
    "ui": [
      "@radix-ui/*",
      "framer-motion",
      "lucide-react",
      "sonner"
    ],
    "data": [
      "@tanstack/react-query",
      "@supabase/supabase-js",
      "react-hook-form",
      "zod"
    ],
    "utilities": [
      "date-fns",
      "papaparse",
      "xlsx",
      "html2pdf.js"
    ],
    "ai": [
      "openai",
      "@huggingface/transformers"
    ]
  },
  "database": {
    "tables": {
      "core": [
        "profiles",
        "companies",
        "user_permissions"
      ],
      "fleet": [
        "vehicles",
        "vehicle_groups",
        "vehicle_maintenance",
        "vehicle_insurance"
      ],
      "contracts": [
        "contracts",
        "contract_templates",
        "contract_documents",
        "contract_payments"
      ],
      "customers": [
        "customers",
        "customer_accounts"
      ],
      "financial": [
        "payments",
        "invoices",
        "accounts",
        "journal_entries"
      ],
      "legal": [
        "legal_cases",
        "traffic_violations",
        "legal_documents"
      ]
    },
    "functions": [
      "create_contract_with_items",
      "calculate_customer_balance",
      "generate_account_statement",
      "process_bulk_payments",
      "transfer_user_to_company"
    ]
  },
  "conventions": {
    "naming": {
      "components": "PascalCase",
      "hooks": "camelCase with 'use' prefix",
      "utils": "camelCase",
      "types": "PascalCase"
    },
    "git": {
      "branches": "feature/*, fix/*, refactor/*",
      "commits": "Conventional commits (feat:, fix:, docs:, etc.)"
    },
    "testing": {
      "framework": "Vitest",
      "location": "/src/__tests__/"
    }
  },
  "performance": {
    "optimizations": [
      "Code splitting",
      "Lazy loading",
      "Virtual scrolling (@tanstack/react-virtual)",
      "Debounced searches",
      "Memoization"
    ],
    "issues": [
      "Large bundle size (~2MB)",
      "Slow with 1000+ records",
      "Complex RLS policies"
    ]
  },
  "deployment": {
    "platforms": {
      "web": ["Vercel", "Netlify"],
      "mobile": "Capacitor (iOS/Android)"
    },
    "commands": {
      "dev": "npm run dev",
      "build": "npm run build",
      "test": "npm test",
      "android": "npm run android:build",
      "ios": "npm run ios:build"
    }
  },
  "security": {
    "auth": "Supabase Auth + JWT",
    "database": "Row Level Security (RLS)",
    "validation": "Zod schemas",
    "api": "HTTPS only, parameterized queries"
  },
  "pain_points": [
    "Complex hooks exceeding 500 lines",
    "Some 'any' TypeScript types",
    "Limited test coverage",
    "100+ migration files need consolidation",
    "Date formatting inconsistencies",
    "Pagination state management"
  ],
  "agent_guidelines": {
    "safety": [
      "Never modify production directly",
      "Always create migrations for schema changes",
      "Test locally before committing",
      "Use feature flags for risky changes"
    ],
    "code_style": [
      "Use TypeScript with explicit types",
      "Handle errors properly",
      "Include loading states",
      "Validate user input with Zod"
    ],
    "workflow": [
      "Create feature branches",
      "Write tests for new features",
      "Update documentation",
      "Use conventional commits"
    ]
  }
}